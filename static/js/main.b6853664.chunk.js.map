{"version":3,"sources":["styles/CardsContainer.module.scss","components/Card.js","actions/constants.js","components/AddWeather.js","containers/CardsContainer.js","actions/WeatherAction.js","containers/App.js","reducers/WeatherReducer.js","reducers/MainReducer.js","store.js","index.js","styles/Card.module.scss"],"names":["module","exports","Card","info","onRemove","useState","flipped","setFlipped","name","main","weather","dt","wind","sys","date","Date","dateWeek","toLocaleString","weekday","month","day","takeTimeFromDate","hour","minute","icon","handleClick","className","style","card","inner","isFlipped","temp","card_cold","card_warm","side","front_side","close","onClick","faTimes","city","src","alt","Math","round","descr","description","charAt","toUpperCase","slice","time","navButtons","moreInfo","faArrowRight","back_side","moreData","feels_like","pressure","speed","sunrise","sunset","backButton","faArrowLeft","GET_CITY","GET_LOCATION","ADD_CARD","API_KEY","REMOVE_CARD","AddWeather","props","styles","form","onSubmit","handleSubmit","input","Field","component","id","getButton","document","getElementById","value","location","getLocation","faLocationArrow","reduxForm","connect","state","weatherArray","getCityWeather","cityName","dispatch","axios","get","then","response","type","payload","data","catch","alert","getCoordsWeather","lat","lon","localWeather","addCard","removeCard","index","useEffect","length","wrapper","navigator","geolocation","getCurrentPosition","pos","coordinates","coords","latitude","lng","longitude","cards_holder","map","dataObj","App","initialState","arrayFromSet","array","Array","from","Set","a","find","MainReducer","combineReducers","action","filter","item","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b6853664.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardsContainer_wrapper__3VPhE\",\"form\":\"CardsContainer_form__H11qz\",\"input\":\"CardsContainer_input__23kot\",\"location\":\"CardsContainer_location__3jkWK\",\"getButton\":\"CardsContainer_getButton__iKbRp\",\"button_animation\":\"CardsContainer_button_animation__3zzm7\",\"icon\":\"CardsContainer_icon__2g24r\",\"cards_holder\":\"CardsContainer_cards_holder__3tuEt\"};","import style from \"../styles/Card.module.scss\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport {\r\n  faArrowRight,\r\n  faArrowLeft,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nconst Card = ({ info, onRemove }) => {\r\n  const [flipped, setFlipped] = useState(false)\r\n\r\n  const { name, main, weather, dt, wind, sys } = info\r\n\r\n  const date = new Date(dt * 1000)\r\n  const dateWeek = date.toLocaleString(\"en-US\", {\r\n    weekday: \"short\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  })\r\n\r\n  const takeTimeFromDate = (date) => {\r\n    let time = date.toLocaleString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    })\r\n    return time\r\n  }\r\n  let icon = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\r\n\r\n  const handleClick = () => {\r\n    setFlipped(!flipped)\r\n  }\r\n\r\n  return (\r\n    <div className={` ${style.card}`}>\r\n      <div className={` ${style.inner}  ${flipped ? style.isFlipped : \"\"}  `}>\r\n        <div\r\n          className={`${main.temp <= 15 ? style.card_cold : style.card_warm} ${\r\n            style.side\r\n          } ${style.front_side}`}\r\n        >\r\n          <span className={style.close} onClick={onRemove}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </span>\r\n          <h2 className={style.city}>{name}</h2>\r\n          <img className={style.icon} src={icon} alt=\"weather icon\" />\r\n          <h2 className={style.temp}>{`${Math.round(main.temp)} °С`}</h2>\r\n          <p className={style.descr}>\r\n            {weather[0].description.charAt(0).toUpperCase() +\r\n              weather[0].description.slice(1)}\r\n          </p>\r\n          <h3 className={style.time}>{takeTimeFromDate(date)}</h3>\r\n          <p className={style.date}>{dateWeek}</p>\r\n          <label className={`${style.navButtons} ${style.moreInfo}`}>\r\n            5 days forecast\r\n            <button onClick={handleClick}>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n          </label>\r\n        </div>\r\n        <div\r\n          className={`${main.temp <= 15 ? style.card_cold : style.card_warm} ${\r\n            style.side\r\n          } ${style.back_side}`}\r\n        >\r\n          <span className={style.close} onClick={onRemove}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </span>\r\n          <h2 className={style.city}>{name}</h2>\r\n          <div className={style.moreData}>\r\n            <h3>\r\n              Feels :<span>{`${Math.round(main.feels_like)} °С`}</span>\r\n            </h3>\r\n            <h3>\r\n              Pressure :<span>{`${main.pressure} hPa`}</span>\r\n            </h3>\r\n            <h3>\r\n              Wind :<span>{`${wind.speed} m/s`}</span>\r\n            </h3>\r\n            <h3>\r\n              Sunrise :\r\n              <span>{`${takeTimeFromDate(new Date(sys.sunrise * 1000))}`}</span>\r\n            </h3>\r\n            <h3>\r\n              Sunset :\r\n              <span>{`${takeTimeFromDate(new Date(sys.sunset * 1000))}`}</span>\r\n            </h3>\r\n          </div>\r\n          <label className={`${style.navButtons} ${style.backButton}`}>\r\n            <button onClick={handleClick}>\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            Back\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","export const GET_CITY = 'FETCH_CITY';\r\nexport const GET_LOCATION = 'FETCH_LOCATION';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const API_KEY = '05f7911bd80b989d6f1878b5b3f72620';\r\nexport const REMOVE_CARD = 'REMOVE_CARD';\r\n","import styles from '../styles/CardsContainer.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlet AddWeather = (props) => {\r\n  return (\r\n    <div className={styles.form}>\r\n      <form name=\"city\" onSubmit={props.handleSubmit}>\r\n        <label className={styles.input}>\r\n          City:\r\n          <Field name={'city'} component={'input'} id=\"cityName\" />\r\n        </label>\r\n        <button\r\n          className={styles.getButton}\r\n          onSubmit={() => (document.getElementById('cityName').value = '')}\r\n        >\r\n          Get Weather\r\n        </button>\r\n      </form>\r\n\r\n      <button className={styles.location} onClick={props.getLocation}>\r\n        Current location\r\n        <FontAwesomeIcon className={styles.icon} icon={faLocationArrow} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWeather = reduxForm({ form: 'AddWeather' })(AddWeather);\r\n","import React, { useEffect } from 'react';\r\nimport styles from '../styles/CardsContainer.module.scss';\r\nimport Card from '../components/Card';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getCityWeather,\r\n  getCoordsWeather,\r\n  addCard,\r\n  removeCard,\r\n} from '../actions/WeatherAction';\r\nimport AddWeather from '../components/AddWeather';\r\n\r\nconst CardsContainer = (props) => {\r\n  const {\r\n    getCoordsWeather,\r\n    getCityWeather,\r\n    weatherArray,\r\n    addCard,\r\n    removeCard,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (weatherArray.length > 0) {\r\n      addCard();\r\n    }\r\n  }, []);\r\n\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      const coordinates = {\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      };\r\n      getCoordsWeather(coordinates.lat, coordinates.lng);\r\n    });\r\n  };\r\n\r\n  const OnSubmit = () => {\r\n    getCityWeather(document.getElementById('cityName').value);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <AddWeather getLocation={getLocation} onSubmit={OnSubmit} />\r\n      <div className={styles.cards_holder}>\r\n        {weatherArray.map((dataObj, index) => {\r\n          return (\r\n            <Card\r\n              key={dataObj.id}\r\n              info={dataObj}\r\n              onRemove={() => removeCard(index)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  weatherArray: state.weather.weatherArray,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCityWeather,\r\n  getCoordsWeather,\r\n  addCard,\r\n  removeCard,\r\n})(CardsContainer);\r\n","import axios from 'axios';\r\nimport {\r\n  ADD_CARD,\r\n  GET_CITY,\r\n  GET_LOCATION,\r\n  API_KEY,\r\n  REMOVE_CARD,\r\n} from '../actions/constants';\r\n\r\nexport const getCityWeather = (cityName) => (dispatch) => {\r\n  axios\r\n    .get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: GET_CITY,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch(() => {\r\n      alert('Please write correct city');\r\n    });\r\n};\r\n\r\nexport const getCoordsWeather = (lat, lon) => (dispatch) => {\r\n  axios\r\n    .get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\r\n    )\r\n    .then((localWeather) => {\r\n      dispatch({\r\n        type: GET_LOCATION,\r\n        payload: localWeather.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCard = () => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_CARD,\r\n  });\r\n};\r\n\r\nexport const removeCard = (index) => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_CARD,\r\n    payload: index,\r\n  });\r\n};\r\n","import CardsContainer from './CardsContainer';\nimport '../styles/App.scss';\nfunction App() {\n  return <CardsContainer />;\n}\n\nexport default App;\n","import {\r\n  ADD_CARD,\r\n  GET_CITY,\r\n  GET_LOCATION,\r\n  REMOVE_CARD,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  weatherArray: [],\r\n};\r\nconst arrayFromSet = (array) => {\r\n  return Array.from(new Set([...array].map((a) => a.id))).map((id) => {\r\n    return [...array].find((a) => a.id === id);\r\n  });\r\n};\r\nexport const WeatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CITY:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([action.payload, ...state.weatherArray]),\r\n      };\r\n    case GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([action.payload, ...state.weatherArray]),\r\n      };\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([...state.weatherArray]),\r\n      };\r\n    case REMOVE_CARD:\r\n      return {\r\n        ...state,\r\n        weatherArray: [...state.weatherArray].filter(\r\n          (item, index) => index !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { WeatherReducer } from './WeatherReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst MainReducer = combineReducers({\r\n  weather: WeatherReducer,\r\n  form: formReducer,\r\n});\r\nexport default MainReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport MainReducer from './reducers/MainReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  MainReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3jwRS\",\"inner\":\"Card_inner__2meLe\",\"side\":\"Card_side__1X1rg\",\"front_side\":\"Card_front_side__2bIJ5\",\"icon\":\"Card_icon__1HmIJ\",\"temp\":\"Card_temp__1lf-U\",\"descr\":\"Card_descr__2NJgT\",\"time\":\"Card_time__3w9HG\",\"date\":\"Card_date__3UsHx\",\"moreInfo\":\"Card_moreInfo__1GxGO\",\"navButtons\":\"Card_navButtons__3sH0x\",\"city\":\"Card_city__2S8IB\",\"back_side\":\"Card_back_side__j5atY\",\"moreData\":\"Card_moreData__Wsy0m\",\"backButton\":\"Card_backButton__3PWFx\",\"isFlipped\":\"Card_isFlipped__WmxU8\",\"close\":\"Card_close__OlhbI\",\"card_cold\":\"Card_card_cold__3wuFn\",\"card_warm\":\"Card_card_warm__7zr2d\"};"],"sourceRoot":""}