[{"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\index.js":"1","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\containers\\App.js":"2","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\containers\\CardsContainer.js":"3","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\components\\Card.js":"4","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\store.js":"5","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\reducers\\MainReducer.js":"6","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\actions\\WeatherAction.js":"7","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\components\\AddWeather.js":"8","C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\reducers\\WeatherReducer.js":"9"},{"size":324,"mtime":1607896664833,"results":"10","hashOfConfig":"11"},{"size":145,"mtime":1608671686640,"results":"12","hashOfConfig":"11"},{"size":1826,"mtime":1608678079833,"results":"13","hashOfConfig":"11"},{"size":3028,"mtime":1608678235066,"results":"14","hashOfConfig":"11"},{"size":350,"mtime":1607896637248,"results":"15","hashOfConfig":"11"},{"size":273,"mtime":1607976877157,"results":"16","hashOfConfig":"11"},{"size":1009,"mtime":1608678079802,"results":"17","hashOfConfig":"11"},{"size":998,"mtime":1608666723640,"results":"18","hashOfConfig":"11"},{"size":683,"mtime":1608677797726,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1snwa7x",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\index.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\containers\\App.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\containers\\CardsContainer.js",["40","41"],"import React, { useEffect } from 'react';\r\nimport styles from '../styles/CardsContainer.module.scss';\r\nimport Card from '../components/Card';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getCityWeather,\r\n  getCoordsWeather,\r\n  addCard,\r\n} from '../actions/WeatherAction';\r\nimport AddWeather from '../components/AddWeather';\r\n\r\nconst CardsContainer = (props) => {\r\n  const {\r\n    getCoordsWeather,\r\n    getCityWeather,\r\n    cardDataArray,\r\n    localWeather,\r\n    cityWeather,\r\n    addCard,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (localWeather.length > 0) {\r\n      addCard();\r\n    }\r\n  }, [localWeather]);\r\n  useEffect(() => {\r\n    if (cityWeather.length > 0) {\r\n      addCard();\r\n    }\r\n  }, [cityWeather]);\r\n\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      const coordinates = {\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      };\r\n      getCoordsWeather(coordinates.lat, coordinates.lng);\r\n    });\r\n  };\r\n  let filtered = cardDataArray.filter((a) => !cardDataArray.includes(a.id));\r\n  const OnSubmit = () => {\r\n    const name = document.getElementById('cityName');\r\n    getCityWeather(name.value);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <AddWeather getLocation={getLocation} onSubmit={OnSubmit} />\r\n      <div className={styles.cards_holder}>\r\n        {filtered.map((dataObj) => {\r\n          return <Card key={dataObj.id} info={dataObj} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  localWeather: state.weather.localWeather,\r\n  cityWeather: state.weather.cityWeather,\r\n  cardDataArray: state.weather.cardDataArray,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCityWeather,\r\n  getCoordsWeather,\r\n  addCard,\r\n})(CardsContainer);\r\n",["42","43"],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\components\\Card.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\store.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\reducers\\MainReducer.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\actions\\WeatherAction.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\components\\AddWeather.js",[],"C:\\Users\\Tom\\Desktop\\react-weather-app\\src\\reducers\\WeatherReducer.js",[],{"ruleId":"44","severity":1,"message":"45","line":25,"column":6,"nodeType":"46","endLine":25,"endColumn":20,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":6,"nodeType":"46","endLine":30,"endColumn":19,"suggestions":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addCard'. Either include it or remove the dependency array.","ArrayExpression",["53"],["54"],"no-native-reassign",["55"],"no-negated-in-lhs",["56"],{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [addCard, localWeather]",{"range":"61","text":"62"},"Update the dependencies array to be: [addCard, cityWeather]",{"range":"63","text":"64"},[611,625],"[addCard, localWeather]",[726,739],"[addCard, cityWeather]"]