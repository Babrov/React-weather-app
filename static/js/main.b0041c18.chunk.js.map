{"version":3,"sources":["styles/CardsContainer.module.scss","components/Card.js","components/AddWeather.js","actions/constants.js","containers/CardsContainer.js","actions/WeatherAction.js","containers/App.js","reducers/WeatherReducer.js","reducers/MainReducer.js","store.js","index.js","styles/Card.module.scss"],"names":["module","exports","Card","info","onRemove","useState","flipped","setFlipped","name","main","weather","dt","wind","sys","date","Date","dateWeek","toLocaleString","weekday","month","day","takeTimeFromDate","hour","minute","icon","handleClick","className","style","card","inner","isFlipped","temp","card_cold","card_warm","side","front_side","close","onClick","faTimes","city","src","alt","Math","round","descr","description","charAt","toUpperCase","slice","time","navButtons","moreInfo","faArrowRight","back_side","moreData","feels_like","pressure","speed","sunrise","sunset","backButton","faArrowLeft","AddWeather","getLocation","handleSubmit","styles","form","onSubmit","input","Field","component","id","getButton","document","getElementById","value","location","faLocationArrow","reduxForm","GET_CITY","GET_LOCATION","ADD_CARD","API_KEY","REMOVE_CARD","connect","state","weatherArray","getCoordsWeather","lat","lon","dispatch","axios","get","then","localWeather","type","payload","data","getCityWeather","cityName","response","catch","alert","removeCard","index","addCard","props","useEffect","length","wrapper","navigator","geolocation","getCurrentPosition","pos","coordinates","coords","latitude","lng","longitude","cards_holder","map","dataObj","App","initialState","arrayFromSet","array","Array","from","Set","el","find","MainReducer","combineReducers","action","filter","item","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0041c18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardsContainer_wrapper__3VPhE\",\"form\":\"CardsContainer_form__H11qz\",\"input\":\"CardsContainer_input__23kot\",\"location\":\"CardsContainer_location__3jkWK\",\"getButton\":\"CardsContainer_getButton__iKbRp\",\"button_animation\":\"CardsContainer_button_animation__3zzm7\",\"icon\":\"CardsContainer_icon__2g24r\",\"cards_holder\":\"CardsContainer_cards_holder__3tuEt\"};","import style from \"../styles/Card.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  faArrowRight,\r\n  faArrowLeft,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Card = ({ info, onRemove }) => {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const { name, main, weather, dt, wind, sys } = info;\r\n\r\n  const date = new Date(dt * 1000);\r\n  const dateWeek = date.toLocaleString(\"en-US\", {\r\n    weekday: \"short\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n  const takeTimeFromDate = (date) => {\r\n    let time = date.toLocaleString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n    return time;\r\n  };\r\n  let icon = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\r\n\r\n  const handleClick = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n  return (\r\n    <div className={`${style.card}`}>\r\n      <div className={`${style.inner} ${flipped ? style.isFlipped : \"\"}`}>\r\n        <div\r\n          className={`${main.temp <= 15 ? style.card_cold : style.card_warm} \r\n          ${style.side} \r\n          ${style.front_side}`}\r\n        >\r\n          <span className={style.close} onClick={onRemove}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </span>\r\n          <h2 className={style.city}>{name}</h2>\r\n          <img className={style.icon} src={icon} alt=\"weather icon\" />\r\n          <h2 className={style.temp}>{`${Math.round(main.temp)} °С`}</h2>\r\n          <p className={style.descr}>\r\n            {weather[0].description.charAt(0).toUpperCase() +\r\n              weather[0].description.slice(1)}\r\n          </p>\r\n          <h3 className={style.time}>{takeTimeFromDate(date)}</h3>\r\n          <p className={style.date}>{dateWeek}</p>\r\n          <label className={`${style.navButtons} ${style.moreInfo}`}>\r\n            5 days forecast\r\n            <button onClick={handleClick}>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n          </label>\r\n        </div>\r\n        <div\r\n          className={`${main.temp <= 15 ? style.card_cold : style.card_warm} ${\r\n            style.side\r\n          } ${style.back_side}`}\r\n        >\r\n          <span className={style.close} onClick={onRemove}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </span>\r\n          <h2 className={style.city}>{name}</h2>\r\n          <div className={style.moreData}>\r\n            <h3>\r\n              Feels :<span>{`${Math.round(main.feels_like)} °С`}</span>\r\n            </h3>\r\n            <h3>\r\n              Pressure :<span>{`${main.pressure} hPa`}</span>\r\n            </h3>\r\n            <h3>\r\n              Wind :<span>{`${wind.speed} m/s`}</span>\r\n            </h3>\r\n            <h3>\r\n              Sunrise :\r\n              <span>{`${takeTimeFromDate(new Date(sys.sunrise * 1000))}`}</span>\r\n            </h3>\r\n            <h3>\r\n              Sunset :\r\n              <span>{`${takeTimeFromDate(new Date(sys.sunset * 1000))}`}</span>\r\n            </h3>\r\n          </div>\r\n          <label className={`${style.navButtons} ${style.backButton}`}>\r\n            <button onClick={handleClick}>\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            Back\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styles from '../styles/CardsContainer.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlet AddWeather = ({getLocation, handleSubmit}) => {\r\n  return (\r\n    <div className={styles.form}>\r\n      <form name=\"city\" onSubmit={handleSubmit}>\r\n        <label className={styles.input}>\r\n          City:\r\n          <Field name={'city'} component={'input'} id=\"cityName\" />\r\n        </label>\r\n        <button\r\n          className={styles.getButton}\r\n          onSubmit={() => (document.getElementById('cityName').value = '')}\r\n        >\r\n          Get Weather\r\n        </button>\r\n      </form>\r\n      <button className={styles.location} onClick={getLocation}>\r\n        Current location\r\n        <FontAwesomeIcon className={styles.icon} icon={faLocationArrow} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWeather = reduxForm({ form: 'AddWeather' })(AddWeather);\r\n","export const GET_CITY = 'FETCH_CITY';\r\nexport const GET_LOCATION = 'FETCH_LOCATION';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const API_KEY = '05f7911bd80b989d6f1878b5b3f72620';\r\nexport const REMOVE_CARD = 'REMOVE_CARD';\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"../styles/CardsContainer.module.scss\";\r\nimport Card from \"../components/Card\";\r\nimport AddWeather from \"../components/AddWeather\";\r\nimport {\r\n  getCoordsWeather,\r\n  getCityWeather,\r\n  removeCard,\r\n  addCard,\r\n} from \"../actions/WeatherAction\";\r\n\r\nconst CardsContainer = (props) => {\r\n  const {\r\n    getCoordsWeather,\r\n    getCityWeather,\r\n    weatherArray,\r\n    removeCard,\r\n    addCard,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (weatherArray.length > 0) {\r\n      addCard();\r\n    }\r\n  }, []);\r\n\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      const coordinates = {\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      };\r\n      getCoordsWeather(coordinates.lat, coordinates.lng);\r\n    });\r\n  };\r\n\r\n  const OnSubmit = () => {\r\n    getCityWeather(document.getElementById(\"cityName\").value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <AddWeather getLocation={getLocation} onSubmit={OnSubmit} />\r\n      <div className={styles.cards_holder}>\r\n        {weatherArray.map((dataObj, index) => {\r\n          return (\r\n            <Card\r\n              key={dataObj.id}\r\n              info={dataObj}\r\n              onRemove={() => removeCard(index)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  weatherArray: state.weather.weatherArray,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCoordsWeather,\r\n  getCityWeather,\r\n  removeCard,\r\n  addCard,\r\n})(CardsContainer);\r\n","import axios from 'axios';\r\nimport {\r\n  ADD_CARD,\r\n  GET_CITY,\r\n  GET_LOCATION,\r\n  API_KEY,\r\n  REMOVE_CARD,\r\n} from '../actions/constants';\r\n\r\nexport const getCityWeather = (cityName) => (dispatch) => {\r\n  axios\r\n    .get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`\r\n    )\r\n    .then((response) => {\r\n      dispatch({\r\n        type: GET_CITY,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch(() => {\r\n      alert('Please write correct city');\r\n    });\r\n};\r\n\r\nexport const getCoordsWeather = (lat, lon) => (dispatch) => {\r\n  axios\r\n    .get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\r\n    )\r\n    .then((localWeather) => {\r\n      dispatch({\r\n        type: GET_LOCATION,\r\n        payload: localWeather.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addCard = () => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_CARD,\r\n  });\r\n};\r\n\r\nexport const removeCard = (index) => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_CARD,\r\n    payload: index,\r\n  });\r\n};\r\n","import CardsContainer from \"./CardsContainer\";\nimport \"../styles/App.scss\";\n\nconst App = () => {\n  return <CardsContainer />;\n};\n\nexport default App;\n","import {\r\n  ADD_CARD,\r\n  GET_CITY,\r\n  GET_LOCATION,\r\n  REMOVE_CARD,\r\n} from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  weatherArray: [],\r\n};\r\nconst arrayFromSet = (array) => {\r\n  return Array.from(new Set([...array].map((el) => el.id))).map((id) => {\r\n    return [...array].find((el) => el.id === id);\r\n  });\r\n};\r\nexport const WeatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CITY:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([action.payload, ...state.weatherArray]),\r\n      };\r\n    case GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([action.payload, ...state.weatherArray]),\r\n      };\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        weatherArray: arrayFromSet([...state.weatherArray]),\r\n      };\r\n    case REMOVE_CARD:\r\n      return {\r\n        ...state,\r\n        weatherArray: [...state.weatherArray].filter(\r\n          (item, index) => index !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { WeatherReducer } from './WeatherReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst MainReducer = combineReducers({\r\n  weather: WeatherReducer,\r\n  form: formReducer,\r\n});\r\nexport default MainReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport MainReducer from './reducers/MainReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  MainReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3jwRS\",\"inner\":\"Card_inner__2meLe\",\"side\":\"Card_side__1X1rg\",\"front_side\":\"Card_front_side__2bIJ5\",\"icon\":\"Card_icon__1HmIJ\",\"temp\":\"Card_temp__1lf-U\",\"descr\":\"Card_descr__2NJgT\",\"time\":\"Card_time__3w9HG\",\"date\":\"Card_date__3UsHx\",\"moreInfo\":\"Card_moreInfo__1GxGO\",\"navButtons\":\"Card_navButtons__3sH0x\",\"city\":\"Card_city__2S8IB\",\"back_side\":\"Card_back_side__j5atY\",\"moreData\":\"Card_moreData__Wsy0m\",\"backButton\":\"Card_backButton__3PWFx\",\"isFlipped\":\"Card_isFlipped__WmxU8\",\"close\":\"Card_close__OlhbI\",\"card_cold\":\"Card_card_cold__3wuFn\",\"card_warm\":\"Card_card_warm__7zr2d\"};"],"sourceRoot":""}